#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

&lt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
            layers = <2>;
        };
    };

    behaviors {
        mt_mkp: mt_mkp {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_MKP";
            bindings = <&mkp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <55>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };

        mt_vim_emmet: mt_vim_emmet {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_VIM_EMMET";
            bindings = <&vim_emmet>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <18>;
            flavor = "tap-preferred";
        };

        mt_capsword: mt_capsword {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_CAPSWORD";
            bindings = <&caps_word>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <19>;
        };
    };

    macros {
        arrow_operator: arrow_operator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW_OPERATOR";
        };

        thin_operator: thin_operator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "THIN_OPERATOR";
        };

        vim_emmet: vim_emmet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Y) &kp COMMA>;
            label = "VIM_EMMET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp LG(M)         &kp N1          &kp N2           &kp N3           &kp N4            &kp N5             &kp N6             &kp N7             &kp N8       &kp N9            &kp N0                      &kp LG(TAB)
&kp CAPS          &kp Q           &kp W            &kp E            &kp R             &kp T              &mt_vim_emmet 0 Y  &mt_capsword 0 U   &kp I        &kp O             &kp P                       &kp MINUS
&kp LEFT_SHIFT    &mt LEFT_ALT A  &mt LEFT_META S  &mt LCTRL D      &mt LEFT_SHIFT F  &mt COLON G        &mt SQT H          &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_META L  &mt RIGHT_ALT SEMI          &mt RIGHT_SHIFT SQT
&kp LEFT_COMMAND  &kp Z           &kp X            &kp C            &kp V             &kp B              &kp N              &kp M              &kp COMMA    &kp DOT           &mt NON_US_BACKSLASH SLASH  &kp RIGHT_CONTROL
                                                   &mt_mkp MB3 TAB  &lt 2 SPACE       &mt LC(B) MINUS    &kp ENTER          &lt 3 BACKSPACE
                                                                    &mkp MB1          &mkp MB2           &mt_mkp MB3 ESC
            >;
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2           &kp F3         &kp F4                 &kp F5           &kp F6               &kp F7     &kp F8         &kp F9        &kp F10          &kp F11         &kp F12
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH               &kp DOLLAR       &kp PERCENT          &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp GRAVE        &kp PIPE        &kp DELETE
&trans  &kp TILDE        &kp PIPE       &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LBKT             &kp UNDER  &kp PLUS       &kp EQUAL     &arrow_operator  &thin_operator  &trans
&trans  &kp GRAVE        &kp BACKSLASH  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &trans     &trans         &trans        &trans           &trans          &trans
                                        &trans                 &trans           &trans               &trans     &trans
                                                               &trans           &trans               &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans        &trans        &trans        &trans         &trans          &trans    &trans    &trans  &trans     &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &bt BT_CLR    &bt BT_PRV    &bt BT_NXT    &kp PAGE_DOWN  &kp PAGE_UP     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans        &kp DELETE    &kp INSERT    &kp END        &kp HOME        &trans    &trans    &trans  &trans     &trans  &trans
                                    &trans        &trans         &trans          &trans    &trans
                                                  &trans         &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };
    };
};
